---
import MainLayout from './MainLayout.astro';
import { Sidebar, TableOfContents } from '@docs/ui/components';
import { translate } from '@docs/i18n/utils';
import type { LocaleKey } from '@docs/i18n/locales';

// 設定ファイルのインポート
import docsConfig from '../config/docs.config';
import versions from '../config/versions.config';
import { getSidebarAsync } from '../config/sidebar.config';

interface Props {
  title: string;
  lang: LocaleKey;
  version: string;
}

const { title, lang: langProp, version } = Astro.props;
const lang = langProp as LocaleKey;

// ベースパスの取得
const baseUrl = docsConfig.baseUrl;

// サイドバー項目の取得（非同期）
const sidebarItems = await getSidebarAsync(lang, version, baseUrl);

// 翻訳キーの定数化
const TRANSLATION_KEYS = {
  SEARCH_PLACEHOLDER: 'search.placeholder',
  DOCUMENTATION: 'docs.documentation'
} as const;

// 目次があるかどうか（実際のプロジェクトでは動的に判断する）
const hasToc = true;
---

<MainLayout title={title} lang={lang} version={version} hasSidebar={true} hasToc={hasToc} showSearch={true} showVersionSelector={true}>
  <div class="doc-layout-container">
    <aside class="sidebar-column print:hidden">
      <div class="sidebar-content">
        <Sidebar 
          items={sidebarItems} 
          title={translate(TRANSLATION_KEYS.DOCUMENTATION, lang)} 
        />
      </div>
    </aside>
    
    <div class="main-column">
      <div class="content-panel">
        <article class="sl-markdown-content">
          <slot />
        </article>
      </div>
    </div>
    
    {hasToc && (
      <aside class="toc-column print:hidden">
        <div class="toc-content">
          {Astro.slots.has('toc') ? (
            <slot name="toc" />
          ) : (
            <TableOfContents headings={[]} minLevel={2} maxLevel={3} lang={lang} />
          )}
        </div>
      </aside>
    )}
  </div>
</MainLayout>

<style>
  /* 3カラムレイアウトのコンテナ */
  .doc-layout-container {
    display: flex;
    flex-direction: column;
    width: 100%;
    min-height: calc(100vh - var(--sl-nav-height));
    max-width: 87.5rem; /* 1400px */
    margin: 0 auto;
  }

  /* サイドバー（左カラム）スタイル */
  .sidebar-column {
    width: 100%;
    background-color: var(--sl-color-bg-sidebar);
    border-bottom: 1px solid var(--sl-color-hairline-shade);
  }

  .sidebar-content {
    padding: 1rem var(--sl-sidebar-pad-x) 0;
    height: 100%;
  }

  /* メインコンテンツ（中央カラム）スタイル */
  .main-column {
    width: 100%;
    flex: 1;
  }

  .content-panel {
    padding: 1.5rem var(--sl-content-pad-x);
  }

  /* 目次（右カラム）スタイル */
  .toc-column {
    display: none;
    width: 100%;
    background-color: var(--sl-color-bg);
    border-top: 1px solid var(--sl-color-hairline);
  }

  .toc-content {
    position: sticky;
    top: calc(var(--sl-nav-height) + 1rem);
    padding: 1rem;
  }

  /* タブレット表示（2カラム）*/
  @media (min-width: 50em) {
    .doc-layout-container {
      flex-direction: row;
      flex-wrap: wrap;
    }

    .sidebar-column {
      width: var(--sl-sidebar-width);
      border-right: 1px solid var(--sl-color-hairline-shade);
      border-bottom: none;
      position: sticky;
      top: var(--sl-nav-height);
      height: calc(100vh - var(--sl-nav-height));
      overflow-y: auto;
    }

    .main-column {
      width: calc(100% - var(--sl-sidebar-width));
      min-height: calc(100vh - var(--sl-nav-height));
    }
  }

  /* デスクトップ表示（3カラム）*/
  @media (min-width: 50rem) {
    .doc-layout-container {
      flex-wrap: nowrap;
    }

    .sidebar-column {
      width: var(--sl-sidebar-width);
      flex-shrink: 0;
    }

    .main-column {
      width: calc(100% - var(--sl-sidebar-width) - var(--sl-sidebar-width));
      flex: 1;
      min-width: 0; /* flexboxでオーバーフローを防止 */
    }

    .toc-column {
      display: block;
      width: var(--sl-sidebar-width);
      flex-shrink: 0;
      border-top: none;
      border-left: 1px solid var(--sl-color-hairline);
      position: sticky;
      top: var(--sl-nav-height);
      height: calc(100vh - var(--sl-nav-height));
      overflow-y: auto;
    }
    
    /* 目次内のコンテンツが表示されるようにする */
    .toc-content {
      display: block;
      padding: 1rem;
    }
  }
</style>
