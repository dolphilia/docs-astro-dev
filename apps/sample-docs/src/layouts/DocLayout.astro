---
import MainLayout from './MainLayout.astro';
import { Sidebar } from '@docs/ui/components';
import { VersionSelector } from '@docs/versioning/components';
import { SearchBar, SearchResults } from '@docs/search/components';
import { translate } from '@docs/i18n/utils';
import type { LocaleKey } from '@docs/i18n/locales';

// 設定ファイルのインポート
import docsConfig from '../config/docs.config';
import versions from '../config/versions.config';
import { getSidebarAsync } from '../config/sidebar.config';

interface Props {
  title: string;
  lang: LocaleKey;
  version: string;
}

const { title, lang: langProp, version } = Astro.props;
const lang = langProp as LocaleKey;

// ベースパスの取得
const baseUrl = docsConfig.baseUrl;

// サイドバー項目の取得（非同期）
const sidebarItems = await getSidebarAsync(lang, version, baseUrl);

// 翻訳キーの定数化
const TRANSLATION_KEYS = {
  SEARCH_PLACEHOLDER: 'search.placeholder',
  DOCUMENTATION: 'docs.documentation'
} as const;
---

<MainLayout title={title} lang={lang} version={version}>
  <div class="layout-container">
    <aside class="sidebar">
      <div class="sidebar-content">
        <div class="search-container">
          <SearchBar placeholder={translate(TRANSLATION_KEYS.SEARCH_PLACEHOLDER, lang)} />
          <SearchResults className="search-results" lang={lang} />
        </div>

        <VersionSelector 
          currentVersion={version}
          versions={versions}
          basePath={`${baseUrl}/${lang}`}
        />

        <Sidebar 
          items={sidebarItems} 
          title={translate(TRANSLATION_KEYS.DOCUMENTATION, lang)} 
        />
      </div>
    </aside>
    
    <main class="main-content">
      <article class="article-content">
        <h1>{title}</h1>
        <slot />
      </article>
    </main>
  </div>

<style>
  .layout-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  @media (min-width: 768px) {
    .layout-container {
      flex-direction: row;
    }
  }

  .sidebar {
    width: 100%;
  }

  @media (min-width: 768px) {
    .sidebar {
      width: 16rem;
      flex-shrink: 0;
    }
  }

  .sidebar-content {
    position: sticky;
    top: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .search-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .search-results {
    margin-top: 0.5rem;
  }

  .main-content {
    flex-grow: 1;
  }

  .article-content {
    max-width: none;
  }

  /* Proseスタイルの代替 */
  .article-content :global(h1) {
    font-size: 2.25rem;
    font-weight: 800;
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .article-content :global(h2) {
    font-size: 1.875rem;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
    line-height: 1.3;
  }

  .article-content :global(h3) {
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .article-content :global(p) {
    margin-bottom: 1rem;
    line-height: 1.7;
  }

  .article-content :global(ul),
  .article-content :global(ol) {
    margin-bottom: 1rem;
    padding-left: 1.5rem;
  }

  .article-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .article-content :global(a) {
    color: #2563eb;
    text-decoration: underline;
  }

  .article-content :global(a:hover) {
    color: #1d4ed8;
  }

  .article-content :global(blockquote) {
    border-left: 4px solid #e5e7eb;
    padding-left: 1rem;
    font-style: italic;
    margin: 1.5rem 0;
  }

  .article-content :global(code) {
    font-family: monospace;
    background-color: #f3f4f6;
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }

  .article-content :global(pre) {
    background-color: #1f2937;
    color: #f9fafb;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1.5rem 0;
  }

  .article-content :global(pre code) {
    background-color: transparent;
    padding: 0;
    color: inherit;
  }

  .article-content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 0.375rem;
  }

  .article-content :global(hr) {
    border: 0;
    border-top: 1px solid #e5e7eb;
    margin: 2rem 0;
  }

  .article-content :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5rem 0;
  }

  .article-content :global(th),
  .article-content :global(td) {
    padding: 0.75rem;
    border: 1px solid #e5e7eb;
  }

  .article-content :global(th) {
    background-color: #f9fafb;
    font-weight: 600;
  }

  /* ダークモード対応 */
  :global(.dark) .article-content :global(code) {
    background-color: #374151;
    color: #f3f4f6;
  }

  :global(.dark) .article-content :global(pre) {
    background-color: #111827;
  }

  :global(.dark) .article-content :global(th) {
    background-color: #1f2937;
  }

  :global(.dark) .article-content :global(th),
  :global(.dark) .article-content :global(td) {
    border-color: #374151;
  }

  :global(.dark) .article-content :global(blockquote) {
    border-left-color: #4b5563;
  }

  :global(.dark) .article-content :global(hr) {
    border-top-color: #374151;
  }
</style>
</MainLayout>
