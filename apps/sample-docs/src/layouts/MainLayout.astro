---
/**
 * MainLayout - ドキュメントサイトの基本レイアウトコンポーネント
 * Starlightスタイルに基づいたレイアウト
 */
import { Navigation, Footer } from '@docs/ui/components';
import { VersionSelector } from '@docs/versioning/components';
import { SearchBar } from '@docs/search/components';
import LanguageSelector from '../components/LanguageSelector.astro';
import versions from '../config/versions.config';
import type { LocaleKey } from '@docs/i18n/locales';
import '../styles/global.css';

// 定数定義
const BASE_URL = '/docs-astro';

// インターフェース定義
interface Props {
  /** ページタイトル */
  title: string;
  /** 言語コード */
  lang: LocaleKey;
  /** ドキュメントバージョン */
  version?: string;
  /** サイドバーを表示するか */
  hasSidebar?: boolean;
  /** 目次を表示するか */
  hasToc?: boolean;
  /** 検索バーを表示するか */
  showSearch?: boolean;
  /** バージョンセレクターを表示するか */
  showVersionSelector?: boolean;
}

// プロパティの取得
const { 
  title, 
  lang, 
  version = 'v1', 
  hasSidebar = false,
  hasToc = false,
  showSearch = true,
  showVersionSelector = true
} = Astro.props;

// 最新バージョンを取得
const latestVersion = versions.find(v => v.isLatest)?.id || version;

// ナビゲーション項目の定義
interface NavItem {
  title: string;
  href: string;
}

const navItems: NavItem[] = [
  { title: 'Home', href: `${BASE_URL}/${lang}` },
  { title: 'Docs', href: `${BASE_URL}/${lang}/${version}/guide/getting-started` },
  { title: 'API', href: `${BASE_URL}/${lang}/${version}/api` },
];

// フッターリンクグループの定義
interface LinkGroup {
  title: string;
  links: {
    title: string;
    href: string;
    target?: string;
    rel?: string;
  }[];
}

const linkGroups: LinkGroup[] = [
  {
    title: 'Docs',
    links: [
      { title: 'Getting Started', href: `${BASE_URL}/${lang}/${version}/guide/getting-started` },
      { title: 'API Reference', href: `${BASE_URL}/${lang}/${version}/api` }
    ]
  },
  {
    title: 'Community',
    links: [
      { title: 'GitHub', href: 'https://github.com' },
      { title: 'Discord', href: 'https://discord.com' }
    ]
  }
];

// 現在の年を取得
const currentYear = new Date().getFullYear();

// HTML属性の設定
const htmlDataAttributes: Record<string, string> = { 'data-theme': 'dark' };
if (hasToc) htmlDataAttributes['data-has-toc'] = '';
if (hasSidebar) htmlDataAttributes['data-has-sidebar'] = '';
---

<!DOCTYPE html>
<html lang={lang} {...htmlDataAttributes}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={`${BASE_URL}/favicon.svg`} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Documentation site built with Astro" />
    <title>{title} | Docs</title>
    <style>
      html:not([data-has-toc]) {
        --sl-mobile-toc-height: 0rem;
      }
      html:not([data-has-sidebar]) {
        --sl-content-width: 67.5rem;
      }
      html {
        scroll-padding-top: calc(1.5rem + var(--sl-nav-height) + var(--sl-mobile-toc-height));
      }
      @media (min-width: 50em) {
        [data-has-sidebar] {
          --sl-content-inline-start: var(--sl-sidebar-width);
        }
      }
      @media (min-width: 72em) {
        html {
          scroll-padding-top: calc(1.5rem + var(--sl-nav-height));
        }
      }
    </style>
  </head>
  <body>
    <div class="page sl-flex">
      <header class="header">
        <div class="header-container">
          <div class="header-content">
            <div class="title-wrapper sl-flex">
              <a href={`${BASE_URL}/${lang}`} class="site-title">Docs Astro</a>
            </div>
            <div class="sl-flex print:hidden">
              {showSearch && (
                <div class="search-container">
                  <SearchBar lang={lang} placeholder={`ドキュメントを検索...`} />
                </div>
              )}
            </div>
            <div class="sl-hidden md:sl-flex print:hidden right-group">
              {showVersionSelector && version && (
                <div class="version-selector-container">
                  <VersionSelector 
                    currentVersion={version}
                    versions={versions}
                    basePath={`${BASE_URL}/${lang}`}
                  />
                </div>
              )}
              <div aria-label="言語選択">
                <LanguageSelector currentLang={lang} />
              </div>
              <nav aria-label="メインナビゲーション">
                <Navigation items={navItems} />
              </nav>
            </div>
          </div>
        </div>
      </header>
      
      <div class="main-frame">
        <main id="main-content">
          <slot />
        </main>
      </div>
      
      <Footer 
        linkGroups={linkGroups}
        copyright={`© ${currentYear} Docs Astro. All rights reserved.`}
      />
    </div>
  </body>
</html>

<style>
  /* Starlightスタイルに基づくレイアウト */
  .page {
    flex-direction: column;
    min-height: 100vh;
  }

  .header {
    z-index: var(--sl-z-index-navbar);
    position: inherit;
    inset-inline-start: 0;
    inset-block-start: 0;
    width: 100%;
    height: var(--sl-nav-height);
    border-bottom: 1px solid var(--sl-color-hairline-shade);
    padding: var(--sl-nav-pad-y) var(--sl-nav-pad-x);
    background-color: var(--sl-color-bg-nav);
  }

  .header-container {
    max-width: 87.5rem; /* 1400px */
    margin: 0 auto;
  }

  .header-content {
    display: flex;
    gap: var(--sl-nav-gap);
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }

  .title-wrapper {
    overflow: clip;
    padding: 0.25rem;
    margin: -0.25rem;
    min-width: 0;
  }

  .site-title {
    font-size: var(--sl-text-lg);
    font-weight: 600;
    color: var(--sl-color-white);
    text-decoration: none;
  }

  .right-group {
    gap: 1rem;
    align-items: center;
  }

  .search-container {
    width: 100%;
    max-width: 20rem;
    margin-right: 1rem;
  }

  .version-selector-container {
    margin-right: 0.5rem;
  }

  .main-frame {
    padding-top: calc(var(--sl-nav-height) + var(--sl-mobile-toc-height));
    padding-inline-start: var(--sl-content-inline-start, 0);
  }

  main {
    flex-grow: 1;
    padding: 1.5rem var(--sl-content-pad-x);
  }

  @media (min-width: 50em) {
    .header-content {
      display: grid;
      grid-template-columns: minmax(auto, auto) 1fr auto;
      align-content: center;
    }
  }
</style>
