---
import { getCollection, type CollectionEntry } from 'astro:content';
import DocLayout from '../../../layouts/DocLayout.astro';
import type { GetStaticPathsResult } from 'astro';
import type { LocaleKey } from '@docs/i18n/locales';

// 見出しの型定義
interface Heading {
  depth: number;
  slug: string;
  text: string;
}

// 目次項目の型定義
interface TOCItem extends Heading {
  indent: number;
}

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const docs = await getCollection('docs');
  
  return docs.map((entry: CollectionEntry<'docs'>) => {
    // スラグからパスパラメータを抽出
    // 例: "en/v1/guide/getting-started" → { lang: "en", version: "v1", slug: "guide/getting-started" }
    const [lang, version, ...slugParts] = entry.slug.split('/');
    const slug = slugParts.join('/');
    
    return {
      params: { lang, version, slug },
      props: { entry }
    };
  });
}

const { entry } = Astro.props as { entry: CollectionEntry<'docs'> };
const { Content, headings } = await entry.render();

// 言語とバージョンをパラメータから取得
const { lang: langParam, version: versionParam } = Astro.params;
const lang = (langParam || 'en') as LocaleKey;
const version = String(versionParam || 'v1');

// GitHub Pagesのベースパス
const baseUrl = '/docs-astro';

// 目次の生成
const tableOfContents: TOCItem[] = headings.filter((heading: Heading) => heading.depth <= 3).map((heading: Heading) => ({
  ...heading,
  slug: heading.slug,
  indent: (heading.depth - 1) * 16 // インデントのサイズを計算
}));
---

<DocLayout title={entry.data.title} lang={lang} version={version}>
  <div class="flex flex-col md:flex-row">
    <div class="w-full md:w-3/4 pr-0 md:pr-8">
      <article class="prose prose-slate dark:prose-invert max-w-none">
        <h1>{entry.data.title}</h1>
        {entry.data.description && <p class="text-lg text-gray-600 dark:text-gray-400">{entry.data.description}</p>}
        
        <Content />
        
        {/* 前後のページナビゲーション */}
        <div class="mt-12 pt-6 border-t border-gray-200 dark:border-gray-800 flex justify-between">
          {entry.data.prev && (
            <a href={entry.data.prev.link} class="group flex items-center">
              <span class="mr-2">←</span>
              <span>
                <span class="block text-sm text-gray-500 dark:text-gray-400">前のページ</span>
                <span class="block font-medium group-hover:text-blue-500">{entry.data.prev.text}</span>
              </span>
            </a>
          )}
          
          {entry.data.next && (
            <a href={entry.data.next.link} class="group flex items-center ml-auto">
              <span>
                <span class="block text-sm text-gray-500 dark:text-gray-400">次のページ</span>
                <span class="block font-medium group-hover:text-blue-500">{entry.data.next.text}</span>
              </span>
              <span class="ml-2">→</span>
            </a>
          )}
        </div>
        
        {/* 編集リンク */}
        <div class="mt-8 text-sm text-gray-500 dark:text-gray-400">
          <a 
            href={`https://github.com/dolphilia/docs-astro/edit/main/apps/sample-docs/src/content/docs/${entry.slug}.mdx`} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center hover:text-blue-500"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
            </svg>
            このページをGitHubで編集
          </a>
        </div>
      </article>
    </div>
    
    {/* 目次サイドバー */}
    <div class="w-full md:w-1/4 mt-8 md:mt-0">
      <div class="sticky top-4">
        <h3 class="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-4">このページの目次</h3>
        <ul class="text-sm">
          {tableOfContents.map((heading: TOCItem) => (
            <li class="mb-2">
              <a 
                href={`#${heading.slug}`} 
                class="text-gray-600 hover:text-blue-500 dark:text-gray-400 dark:hover:text-blue-400"
                style={`margin-left: ${heading.indent}px;`}
              >
                {heading.text}
              </a>
            </li>
          ))}
        </ul>
      </div>
    </div>
  </div>
</DocLayout>
