---
interface NavItem {
  title: string;
  href: string;
  children?: NavItem[];
}

interface Props {
  items: NavItem[];
  class?: string;
}

const { items, class: className = '' } = Astro.props;
---

<div class:list={['navbar bg-base-100', className]}>
  <div class="navbar-start">
    <div class="dropdown">
      <div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" /></svg>
      </div>
      <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
        {items.map((item) => (
          <li>
            <a href={item.href}>{item.title}</a>
            {item.children && item.children.length > 0 && (
              <ul class="p-2">
                {item.children.map((child) => (
                  <li><a href={child.href}>{child.title}</a></li>
                ))}
              </ul>
            )}
          </li>
        ))}
      </ul>
    </div>
  </div>
  <div class="navbar-center hidden lg:flex">
    <ul class="menu menu-horizontal px-1">
      {items.map((item) => (
        <li>
          <a href={item.href}>{item.title}</a>
          {item.children && item.children.length > 0 && (
            <ul class="p-2">
              {item.children.map((child) => (
                <li><a href={child.href}>{child.title}</a></li>
              ))}
            </ul>
          )}
        </li>
      ))}
    </ul>
  </div>
</div>
