---
interface Props {
  title?: string;
  class?: string;
  variant?: 'default' | 'bordered' | 'image';
  [key: string]: any;
}

const { title, class: className = '', variant = 'default', ...rest } = Astro.props;

const classes = [
  'card',
  `card-${variant}`,
  className
];
---

<div class:list={classes} {...rest}>
  <div class="card-body">
    {title && <h2 class="card-title">{title}</h2>}
    <div class="card-content">
      <slot />
    </div>
    {Astro.slots.has('footer') && (
      <div class="card-footer">
        <slot name="footer" />
      </div>
    )}
  </div>
</div>

<style>
  .card {
    border-radius: 0.5rem;
    overflow: hidden;
    background-color: white;
    border: 1px solid rgba(0, 0, 0, 0.15);
  }

  .card-bordered {
    /* border: 1px solid #e5e7eb; */
  }

  .card-image {
    position: relative;
    overflow: hidden;
  }

  .card-body {
    padding: 1.25rem;
  }

  .card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }

  .card-content {
    color: #4b5563;
  }

  .card-footer {
    margin-top: 1rem;
    display: flex;
    justify-content: flex-end;
  }
</style>
