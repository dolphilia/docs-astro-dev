---
// Sidebar.astro - Starlightスタイルに基づいたサイドバーコンポーネント
interface SidebarItem {
  title: string;
  href?: string;
  items?: SidebarItem[];
  isCurrent?: boolean;
}

interface Props {
  items: SidebarItem[];
  title?: string;
  class?: string;
}

const { items, title, class: className = '' } = Astro.props;

// 現在のページかどうかを判定するヘルパー関数
function isCurrentPage(item: SidebarItem): boolean {
  return item.isCurrent || false;
}

// サイドバー内のアイテムが開いているかどうかを判定するヘルパー関数
function shouldBeOpen(section: SidebarItem): boolean {
  if (!section.items) return false;
  return section.items.some(item => isCurrentPage(item) || (item.items && shouldBeOpen(item)));
}
---

<aside 
  class:list={['sidebar', className]}
  role="complementary"
  aria-label={title || 'サイドナビゲーション'}
>
  {title && (
    <h3 class="sidebar-title" id="sidebar-title">
      {title}
    </h3>
  )}
  
  <nav aria-labelledby="sidebar-title">
    <ul class="top-level">
      {items.map((section, index) => (
        <li>
          {section.href ? (
            <a 
              href={section.href}
              aria-current={isCurrentPage(section) ? 'page' : undefined}
              class="large"
            >
              <span>{section.title}</span>
            </a>
          ) : (
            <details open={shouldBeOpen(section)}>
              <summary>
                <div class="group-label">
                  <span class="large">{section.title}</span>
                </div>
                <svg class="caret" width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </summary>
              
              {section.items && (
                <ul>
                  {section.items.map((item) => (
                    <li>
                      <a 
                        href={item.href}
                        aria-current={isCurrentPage(item) ? 'page' : undefined}
                      >
                        <span>{item.title}</span>
                      </a>
                    </li>
                  ))}
                </ul>
              )}
            </details>
          )}
        </li>
      ))}
    </ul>
  </nav>
</aside>

<style>
  /* Starlightスタイルに基づくサイドバースタイル */
  .sidebar {
    width: var(--sl-sidebar-width);
    flex-shrink: 0;
  }

  .sidebar-title {
    margin-bottom: 0.75rem;
    font-weight: 600;
    font-size: var(--sl-text-lg);
    color: var(--sl-color-white);
  }

  ul {
    --sl-sidebar-item-padding-inline: 0.5rem;
    list-style: none;
    padding: 0;
  }

  li {
    overflow-wrap: anywhere;
  }

  ul ul li {
    margin-inline-start: var(--sl-sidebar-item-padding-inline);
    border-inline-start: 1px solid var(--sl-color-hairline-light);
    padding-inline-start: var(--sl-sidebar-item-padding-inline);
  }

  .large {
    font-size: var(--sl-text-lg);
    font-weight: 600;
    color: var(--sl-color-white);
  }

  .top-level > li + li {
    margin-top: 0.75rem;
  }

  summary {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.2em var(--sl-sidebar-item-padding-inline);
    line-height: 1.4;
    cursor: pointer;
    user-select: none;
  }
  summary::marker,
  summary::-webkit-details-marker {
    display: none;
  }

  .caret {
    transition: transform 0.2s ease-in-out;
    flex-shrink: 0;
  }
  [dir='rtl'] .caret {
    transform: rotateZ(180deg);
  }
  [open] > summary .caret {
    transform: rotateZ(90deg);
  }

  a {
    display: block;
    border-radius: 0.25rem;
    text-decoration: none;
    color: var(--sl-color-gray-2);
    padding: 0.3em var(--sl-sidebar-item-padding-inline);
    line-height: 1.4;
  }

  a:hover,
  a:focus {
    color: var(--sl-color-white);
  }

  [aria-current='page'],
  [aria-current='page']:hover,
  [aria-current='page']:focus {
    font-weight: 600;
    color: var(--sl-color-text-invert);
    background-color: var(--sl-color-text-accent);
  }

  a > *:not(:last-child),
  .group-label > *:not(:last-child) {
    margin-inline-end: 0.25em;
  }

  @media (min-width: 50rem) {
    .top-level > li + li {
      margin-top: 0.5rem;
    }
    .large {
      font-size: var(--sl-text-base);
    }
    a {
      font-size: var(--sl-text-sm);
    }
  }
</style>
