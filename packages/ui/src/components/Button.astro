---
interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  [key: string]: any;
}

const {
  variant = 'primary',
  size = 'md',
  class: className = '',
  ...rest
} = Astro.props;

const variantClasses = {
  primary: 'bg-blue-600 text-white hover:bg-blue-700',
  secondary: 'bg-gray-600 text-white hover:bg-gray-700',
  outline: 'border border-blue-600 text-blue-600 hover:bg-blue-50',
  ghost: 'text-blue-600 hover:bg-blue-50',
};

const sizeClasses = {
  sm: 'text-sm px-3 py-1',
  md: 'px-4 py-2',
  lg: 'text-lg px-6 py-3',
};

const classes = [
  'inline-flex items-center justify-center rounded-md font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2',
  variantClasses[variant],
  sizeClasses[size],
  className,
];
---

{rest.href ? (
  <a class:list={classes} {...rest}>
    <slot />
  </a>
) : (
  <button class:list={classes} {...rest}>
    <slot />
  </button>
)}
