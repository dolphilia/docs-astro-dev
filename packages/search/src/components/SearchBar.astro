---
import { Button } from '@docs/ui/components';

interface Props {
  placeholder?: string;
  buttonText?: string;
  className?: string;
}

const {
  placeholder = '検索...',
  buttonText = '検索',
  className = '',
} = Astro.props;
---

<div class:list={['search-bar', className]}>
  <form id="search-form" class="w-full">
    <label class="input input-bordered flex items-center gap-2 w-full">
      <svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <g
          stroke-linejoin="round"
          stroke-linecap="round"
          stroke-width="2.5"
          fill="none"
          stroke="currentColor"
        >
          <circle cx="11" cy="11" r="8"></circle>
          <path d="m21 21-4.3-4.3"></path>
        </g>
      </svg>
      <input
        type="search"
        id="search-input"
        name="q"
        placeholder={placeholder}
        class="grow"
      />
      <div class="flex items-center gap-1">
        <kbd class="kbd kbd-sm">⌘</kbd>
        <kbd class="kbd kbd-sm">K</kbd>
      </div>
    </label>
  </form>
</div>

<script>
  // 検索フォームの送信処理
  const searchForm = document.getElementById('search-form') as HTMLFormElement;
  const searchInput = document.getElementById('search-input') as HTMLInputElement;

  if (searchForm) {
    searchForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const query = searchInput.value.trim();
      
      if (query) {
        // カスタムイベントを発行して検索を実行
        const searchEvent = new CustomEvent('docsearch', {
          detail: { query }
        });
        document.dispatchEvent(searchEvent);
      }
    });
  }

  // キーボードショートカット（⌘K または Ctrl+K）の処理
  document.addEventListener('keydown', (e) => {
    if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
      e.preventDefault();
      searchInput.focus();
    }
  });
</script>
