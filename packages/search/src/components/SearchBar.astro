---
import { Button } from '@docs/ui/components';

interface Props {
  placeholder?: string;
  buttonText?: string;
  className?: string;
}

const {
  placeholder = '検索...',
  buttonText = '検索',
  className = '',
} = Astro.props;
---

<div class:list={['search-bar', className]}>
  <form id="search-form">
    <div class="search-container">
      <div class="search-icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <g
            stroke-linejoin="round"
            stroke-linecap="round"
            stroke-width="2.5"
            fill="none"
            stroke="currentColor"
          >
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.3-4.3"></path>
          </g>
        </svg>
      </div>
      <input
        type="search"
        id="search-input"
        name="q"
        placeholder={placeholder}
      />
      <div class="shortcut-hint">
        <div class="shortcut-keys">
          <span class="key">⌘</span>
          <span class="key">K</span>
        </div>
      </div>
    </div>
  </form>
</div>

<style>
  .search-bar {
    width: 100%;
  }

  .search-container {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
  }

  .search-icon {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    display: flex;
    align-items: center;
    padding-left: 0.75rem;
    pointer-events: none;
  }

  .search-icon svg {
    width: 1rem;
    height: 1rem;
    color: #6b7280;
  }

  input[type="search"] {
    width: 100%;
    padding: 0.5rem 5rem 0.5rem 2.5rem;
    font-size: 0.875rem;
    color: #111827;
    border: 1px solid #d1d5db;
    border-radius: 0.5rem;
  }

  input[type="search"]:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25);
  }

  .shortcut-hint {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    display: flex;
    align-items: center;
    padding-right: 0.75rem;
    pointer-events: none;
  }

  .shortcut-keys {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.75rem;
    color: #6b7280;
  }

  .key {
    padding: 0.125rem 0.375rem;
    background-color: #f3f4f6;
    border: 1px solid #d1d5db;
    border-radius: 0.25rem;
    font-size: 0.75rem;
  }
</style>

<script>
  // 検索フォームの送信処理
  const searchForm = document.getElementById('search-form') as HTMLFormElement;
  const searchInput = document.getElementById('search-input') as HTMLInputElement;

  if (searchForm) {
    searchForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const query = searchInput.value.trim();
      
      if (query) {
        // カスタムイベントを発行して検索を実行
        const searchEvent = new CustomEvent('docsearch', {
          detail: { query }
        });
        document.dispatchEvent(searchEvent);
      }
    });
  }

  // キーボードショートカット（⌘K または Ctrl+K）の処理
  document.addEventListener('keydown', (e) => {
    if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
      e.preventDefault();
      searchInput.focus();
    }
  });
</script>
