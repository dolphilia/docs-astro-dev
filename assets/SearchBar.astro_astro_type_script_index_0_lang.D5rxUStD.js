async function y(a,r){let t="top-page";r.includes("/docs/sample-docs/")&&(t="sample-docs",a=""),console.log("Detected project name:",t);let s=a;s&&s!=="/"?(s.startsWith("/")||(s="/"+s),s.endsWith("/")&&(s=s.slice(0,-1))):s==="/"&&(s="");let e="/search-indices/manifest.json";t==="sample-docs"?e="/search-indices/manifest.json":(e=[s,"search-indices","manifest.json"].filter(l=>l&&l.trim()!=="").join("/"),e&&!e.startsWith("/")&&!e.startsWith("http")&&(e="/"+e)),console.log("Fetching manifest from:",e);try{const o=await fetch(e);if(!o.ok)throw new Error(`Failed to fetch search manifest: ${o.status} ${o.statusText} from ${e}`);const l=await o.json();return console.debug("Search manifest loaded:",l),{searchManifest:l,projectName:t}}catch(o){throw console.error("Error loading search manifest:",o),o}}function w(a,r,t,s){const e=a.projects?.[r]?.[t]?.[s];if(console.log("Looking for index file in manifest:",{projectKey:r,langKey:t,versionKey:s,manifest:a}),!e){console.warn(`マニフェストにインデックスファイルが見つかりませんでした: ${r}, ${t}, ${s}`),console.warn("デフォルトのファイル名を使用してみます...");const l=`/search-indices/${r}-${t}-${s}.json`;return console.log("デフォルトのインデックスパス:",l),l}const o=`/search-indices/${e}`;return console.log("マニフェストからのインデックスパス:",o),o}async function L(a,r){console.log("検索インデックスを取得しようとしています:",a);let t;try{const e=await fetch(a);if(!e.ok)throw new Error(`検索インデックスの取得に失敗しました: ${e.status} ${e.statusText} from ${a}`);if(t=await e.json(),console.log("検索インデックスを正常に取得しました:",t),!Array.isArray(t))if(console.warn("検索インデックスが配列ではありません。変換を試みます:",t),t.documents&&Array.isArray(t.documents))console.log("検索インデックスの documents プロパティが配列です。これを使用します。"),t=t.documents;else if(t.items&&Array.isArray(t.items))console.log("検索インデックスの items プロパティが配列です。これを使用します。"),t=t.items;else if(typeof t=="object"&&t!==null){const o=Object.values(t);o.length>0?(console.log("オブジェクトの値を配列に変換しました。"),t=o):(console.error("検索インデックスから配列を作成できませんでした。"),t=[])}else console.error("検索インデックスがオブジェクトでも配列でもありません。"),t=[];console.log("検索インデックスのエントリ数:",Array.isArray(t)?t.length:0)}catch(e){throw console.error("検索インデックスの取得中にエラーが発生しました:",e),e}let s=[];try{Array.isArray(t)?(console.log("検索インデックスの各アイテムをチェックします"),s=t.filter(e=>{if(!e||typeof e!="object")return console.log("無効なアイテムをスキップします:",e),!1;const o="title"in e,l="content"in e,h="text"in e,d="body"in e;let i="",c="";if(o&&e.title&&typeof e.title=="string"?i=e.title:"name"in e&&e.name&&typeof e.name=="string"?i=e.name:"heading"in e&&e.heading&&typeof e.heading=="string"&&(i=e.heading),l&&e.content&&typeof e.content=="string"?c=e.content:h&&e.text&&typeof e.text=="string"?c=e.text:d&&e.body&&typeof e.body=="string"&&(c=e.body),i&&typeof i!="string")try{i=String(i)}catch{i=""}if(c&&typeof c!="string")try{c=String(c)}catch{c=""}const f=i&&i.toLowerCase().includes(r.toLowerCase()),n=c&&c.toLowerCase().includes(r.toLowerCase());return f||n})):console.warn("検索インデックスが配列ではありません。空の結果を返します。")}catch(e){console.error("検索結果のフィルタリング中にエラーが発生しました:",e)}return console.log("検索結果:",s.length,"件の結果が見つかりました"),s}function v(a){const r={};return a.forEach(t=>{const s=t.category||"Other";r[s]||(r[s]=[]),r[s].push(t)}),r}function M(a,r){const t=a.toLowerCase(),s=r.toLowerCase(),e=t.indexOf(s);if(e===-1)return a.substring(0,150)+"...";const o=Math.max(0,e-75),l=Math.min(a.length,e+r.length+75);let h=a.substring(o,l);return o>0&&(h="..."+h),l<a.length&&(h=h+"..."),h}function p(a,r){if(!r)return a;const t=new RegExp(`(${r.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")})`,"gi");return a.replace(t,'<mark class="search-highlight">$1</mark>')}function E(a,r,t,s){t.innerHTML="";const e=Object.values(a).flat().length;if(e===0){t.innerHTML=`
      <div class="no-results">
        <p>${s.noResults?.replace("{query}",r)||`"${r}" に一致する結果は見つかりませんでした`}</p>
      </div>
    `;return}const o=document.createElement("div");o.className="results-header",o.innerHTML=`
    <h2 class="results-title">
      ${e===1?s.oneResult?.replace("{query}",r)||`"${r}" に対して1件の結果`:s.manyResults?.replace("{query}",r).replace("{count}",String(e))||`"${r}" に対して${e}件の結果`}
    </h2>
  `,t.appendChild(o),Object.entries(a).forEach(([l,h])=>{const d=document.createElement("div");d.className="results-category",d.innerHTML=`
      <h3 class="category-title">${l}</h3>
      <div class="category-results"></div>
    `;const i=d.querySelector(".category-results");h.forEach(c=>{const f=document.createElement("div");f.className="result-item";const n=M(c.content||c.text||"",r);f.innerHTML=`
        <a href="${c.url}" class="result-link">
          <h4 class="result-title">${p(c.title||c.name||"",r)}</h4>
          <div class="result-breadcrumb">${c.breadcrumb||`${c.project||""} ${c.version||""}`}</div>
          <p class="result-excerpt">${p(n,r)}</p>
        </a>
      `,i.appendChild(f)}),t.appendChild(d)})}function u(a,r,t){r.innerHTML=`
    <div class="search-error">
      <p>${t.searchError||"エラー"}: ${a}</p>
    </div>
  `}function S(a){a.innerHTML=""}class $ extends HTMLElement{pageLang="en";baseUrl="";currentProjectName="top-page";searchManifest=null;isManifestLoading=!1;constructor(){super();const r=this.querySelector("button[data-open-modal]"),t=this.querySelector("button[data-close-modal]"),s=this.querySelector("dialog"),e=this.querySelector(".dialog-frame"),o=this.querySelector("#search-input");if(!s){console.error("Search dialog element not found");return}const l=this.querySelector("#search-results-container");let h={};try{h=JSON.parse(this.dataset.translations||"{}")}catch(n){console.error("Failed to parse search translations:",n)}this.pageLang=this.dataset.lang||"en",this.baseUrl=this.dataset.baseUrl||"",this.baseUrl==="/"&&(this.baseUrl=""),this.currentProjectName=this.dataset.currentProjectName||"top-page",this.loadSearchManifest();const d=n=>{("href"in(n.target||{})||document.body.contains(n.target)&&!e.contains(n.target))&&c()},i=async(n,g)=>{try{s.showModal(),document.body.classList.add("search-modal-open"),o.focus(),n?.stopPropagation(),window.addEventListener("click",d),console.log("Search dialog opened successfully")}catch(m){console.error("Failed to open search dialog:",m)}!this.searchManifest&&!this.isManifestLoading&&await this.loadSearchManifest(),!this.searchManifest&&g?(u(g.searchError?g.searchError+": Manifest load failed":"Search manifest could not be loaded.",l,g),o.disabled=!0):o.disabled=!1},c=()=>{s.close(),document.body.classList.remove("search-modal-open"),window.removeEventListener("click",d)};r.addEventListener("click",n=>{n.preventDefault(),n.stopPropagation(),console.log("Search button clicked"),i(n,h)}),t.addEventListener("click",n=>{n.preventDefault(),n.stopPropagation(),c()}),s.addEventListener("close",()=>{document.body.classList.remove("search-modal-open"),window.removeEventListener("click",d)}),window.addEventListener("keydown",n=>{(n.ctrlKey===!0||n.metaKey===!0)&&n.key==="k"&&(s.open?c():i(void 0,h),n.preventDefault()),n.key==="/"&&!["INPUT","TEXTAREA"].includes(document.activeElement?.tagName||"")&&(s.open||(i(void 0,h),n.preventDefault())),n.key==="Escape"&&s.open&&c()}),o.addEventListener("input",()=>{const n=o.value.trim();n.length>=2?this.performSearch(n,l,h):n.length===0&&S(l)});const f=this.querySelector(".platform-key");f&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)&&(f.textContent="⌘")}async loadSearchManifest(){if(!(this.searchManifest||this.isManifestLoading)){this.isManifestLoading=!0;try{const{searchManifest:r,projectName:t}=await y(this.baseUrl,window.location.pathname);this.searchManifest=r,this.currentProjectName=t}catch(r){console.error("マニフェストの読み込み中にエラーが発生しました:",r)}finally{this.isManifestLoading=!1}}}async performSearch(r,t,s){if(this.currentProjectName==="top-page"){console.log("トップページでは検索をサポートしていません"),u(s.searchError?s.searchError+": トップページでは検索をサポートしていません":"トップページでは検索をサポートしていません。ドキュメントページに移動して検索してください。",t,s);return}if(!this.searchManifest){if(this.isManifestLoading){t.innerHTML='<div class="loading-indicator"><p>Loading search data...</p></div>';return}console.error("Search manifest is not loaded. Cannot perform search."),u(s.searchError?s.searchError+": Manifest not loaded":"Search data not available.",t,s);return}try{t.innerHTML=`
          <div class="loading-indicator">
            <div class="loading-spinner"></div>
            <p>${s.searching||"Searching..."}</p>
          </div>
        `;const o=window.location.pathname.split("/").filter(g=>g.length>0),l=this.currentProjectName;let h=this.pageLang,d="v1",i=0;o.length>0&&o[0].toLowerCase()===l.toLowerCase()&&(i=1),o.length>i&&(o[i].length===2||o[i].length===5)&&(h=o[i]),o.length>i+1&&o[i+1].startsWith("v")&&(d=o[i+1]);const c=w(this.searchManifest,l,h,d),f=await L(c,r),n=v(f);E(n,r,t,s)}catch(e){console.error("Search error:",e),u(e instanceof Error?e.message:"An error occurred during search",t,s)}}}customElements.define("site-search",$);
