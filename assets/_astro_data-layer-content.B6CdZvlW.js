const _astro_dataLayerContent = [["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.12.0","content-config-digest","c732645f5da0ad03","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://dolphilia.github.io\",\"compressHTML\":true,\"base\":\"/docs/sample-docs\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"i18n\":{\"defaultLocale\":\"en\",\"locales\":[\"en\",\"ja\"],\"routing\":{\"prefixDefaultLocale\":true,\"redirectToDefaultLocale\":true,\"fallbackType\":\"redirect\"}},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"rawEnvValues\":false},\"legacy\":{\"collections\":false}}","docs",["Map",11,12,27,28,37,38,48,49,57,58,66,67,75,76,87,88,99,100,110,111,119,120,128,129,137,138],"en/v1/guide/01-getting-started",{id:11,data:13,body:22,filePath:23,digest:24,legacyId:25,deferredRender:26},{title:14,description:15,category:16,categoryOrder:17,pubDate:18,updatedDate:19,author:20,draft:21},"Getting Started","Learn how to get started with our platform","guide",1,["Date","2024-01-01T00:00:00.000Z"],["Date","2025-01-01T00:00:00.000Z"],"Docs Team",false,"# Getting Started\n\nWelcome to our documentation! This guide will help you get started with our platform.\n\n## Prerequisites\n\n- Node.js 18 or higher\n- npm, yarn, or pnpm\n- Basic knowledge of JavaScript\n\n## Installation\n\nYou can install our package using npm:\n\n```bash\nnpm install @our-package/core\n```\n\nOr using yarn:\n\n```bash\nyarn add @our-package/core\n```\n\nOr using pnpm:\n\n```bash\npnpm add @our-package/core\n```\n\n## Basic Usage\n\nHere's a simple example of how to use our package:\n\n```javascript\nimport { createApp } from '@our-package/core';\n\nconst app = createApp({\n  // Configuration options\n  debug: true,\n  mode: 'development'\n});\n\napp.start();\n```\n\n## Next Steps\n\nNow that you have the basics set up, you can:\n\n- Learn more about [configuration options](/en/v1/guide/configuration)\n- Explore the [API reference](/en/v1/api/reference)\n- Check out some [examples](/en/v1/examples)","src/content/docs/en/v1/guide/01-getting-started.mdx","00b705774a1ef582","en/v1/guide/01-getting-started.mdx",true,"en/v1/guide/02-installation",{id:27,data:29,body:33,filePath:34,digest:35,legacyId:36,deferredRender:26},{title:30,description:31,pubDate:32,author:20,draft:21},"Installation","Description of Installation",["Date","2025-05-09T00:00:00.000Z"],"# Installation\n\nWrite your content here...","src/content/docs/en/v1/guide/02-installation.mdx","81ed8946c2ed25a9","en/v1/guide/02-installation.mdx","en/v1/guide/03-sidebar-auto-generation",{id:37,data:39,body:44,filePath:45,digest:46,legacyId:47,deferredRender:26},{title:40,description:41,category:16,categoryOrder:17,pubDate:42,updatedDate:43,author:20,draft:21},"Sidebar Auto-Generation","Learn how to use the sidebar auto-generation feature",["Date","2025-05-09T00:00:00.000Z"],["Date","2025-05-09T00:00:00.000Z"],"# Sidebar Auto-Generation\n\nThis guide explains how to use the sidebar auto-generation feature to automatically create sidebar navigation based on your content structure.\n\n## Overview\n\nThe sidebar auto-generation feature allows you to:\n\n1. Automatically generate sidebar navigation based on your content files\n2. Define categories and their order using frontmatter\n3. Control the order of items within categories\n4. Customize sidebar display without manually updating configuration files\n\n## Enabling Auto-Generation\n\nTo enable sidebar auto-generation, set the `useAutoSidebar` option to `true` in your `docs.config.ts` file:\n\n```typescript\n// apps/sample-docs/src/config/docs.config.ts\nconst docsConfig = {\n  // ... other options\n  \n  // Enable auto sidebar generation\n  useAutoSidebar: true,\n  \n  // ... other options\n};\n```\n\n## Frontmatter Configuration\n\nTo control how your content appears in the sidebar, use these frontmatter properties:\n\n```yaml\n---\ntitle: \"Your Document Title\"\ndescription: \"Document description\"\ncategory: \"guide\"  # Category name (optional, defaults to path-based category)\ncategoryOrder: 1   # Order of the category in the sidebar (optional)\norder: 2           # Order within the category (optional)\n---\n```\n\n### Properties\n\n| Property | Type | Description |\n|----------|------|-------------|\n| `title` | string | The title of the document (required) |\n| `category` | string | The category name for grouping in the sidebar (optional) |\n| `categoryOrder` | number | The order of the category in the sidebar (lower numbers appear first) |\n| `order` | number | The order of the document within its category (lower numbers appear first) |\n\n## How It Works\n\nThe sidebar generation process follows these steps:\n\n1. Collects all content files for the current language and version\n2. Groups them by category (from frontmatter or file path)\n3. Sorts categories based on `categoryOrder`\n4. Sorts documents within each category based on `order`\n5. Generates the sidebar structure with proper titles and links\n\n## Path-Based Categories\n\nIf you don't specify a `category` in the frontmatter, the system will use the path-based category. For example:\n\n- A file at `src/content/docs/en/v1/guide/getting-started.mdx` will be categorized as \"guide\"\n- A file at `src/content/docs/en/v1/api/reference.mdx` will be categorized as \"api\"\n\n## Category Titles\n\nCategory titles are determined in the following order:\n\n1. Translation key matching `docs.{category}` (e.g., `docs.guide` → \"Guide\")\n2. If no translation is found, the category name is capitalized (e.g., \"guide\" → \"Guide\")\n\n## Example\n\nHere's a complete example of a document frontmatter:\n\n```yaml\n---\ntitle: \"Getting Started\"\ndescription: \"Learn how to get started with our platform\"\ncategory: \"guide\"\ncategoryOrder: 1\norder: 1\npubDate: 2025-01-01\nupdatedDate: 2025-01-01\nauthor: \"Docs Team\"\nnext:\n  text: \"Installation\"\n  link: \"/en/v1/guide/installation\"\n---\n```\n\nThis will place the document in the \"Guide\" category (which will be ordered first in the sidebar), and it will be the first item within that category.","src/content/docs/en/v1/guide/03-sidebar-auto-generation.mdx","9af9d031f29e561a","en/v1/guide/03-sidebar-auto-generation.mdx","en/v1/guide/04-icons-example",{id:48,data:50,body:53,filePath:54,digest:55,legacyId:56,deferredRender:26},{title:51,description:52,draft:21},"Icons Example","Examples of using the Icon component","import { Icon } from '@docs/ui';\n\n# Icon Component Examples\n\nThe Icon component allows you to display various icons in your documentation.\n\n## Basic Usage\n\nHere's a basic example of using the Icon component:\n\n<Icon name=\"info\" />\n\n## Icon Sizes\n\nYou can specify different sizes for icons using various units:\n\n<div style=\"display: flex; align-items: center; gap: 1rem;\">\n  <Icon name=\"info\" size=\"1em\" />\n  <Icon name=\"info\" size=\"1.5em\" />\n  <Icon name=\"info\" size=\"2em\" />\n  <Icon name=\"info\" size=\"3em\" />\n</div>\n\nYou can also use pixel units:\n\n<div style=\"display: flex; align-items: center; gap: 1rem;\">\n  <Icon name=\"info\" size=\"16px\" />\n  <Icon name=\"info\" size=\"24px\" />\n  <Icon name=\"info\" size=\"32px\" />\n  <Icon name=\"info\" size=\"48px\" />\n</div>\n\n## Icon Colors\n\nYou can customize the color of icons:\n\n<div style=\"display: flex; align-items: center; gap: 1rem;\">\n  <Icon name=\"info\" color=\"#007bff\" />\n  <Icon name=\"triangle-alert\" color=\"#ffc107\" />\n  <Icon name=\"circle-alert\" color=\"#dc3545\" />\n  <Icon name=\"circle-check\" color=\"#28a745\" />\n</div>\n\n## Available Icons\n\nHere are all the available icons:\n\n### Basic Icons\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"info\" />\n    <span>info</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"settings\" />\n    <span>settings</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"triangle-alert\" />\n    <span>triangle-alert</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"circle-alert\" />\n    <span>circle-alert</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"code\" />\n    <span>code</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"file-text\" />\n    <span>file-text</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"search\" />\n    <span>search</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"x\" />\n    <span>x</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"languages\" />\n    <span>languages</span>\n  </div>\n</div>\n\n### Navigation Icons\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"arrow-right\" />\n    <span>arrow-right</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"arrow-left\" />\n    <span>arrow-left</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"arrow-down\" />\n    <span>arrow-down</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"arrow-up\" />\n    <span>arrow-up</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"external-link\" />\n    <span>external-link</span>\n  </div>\n</div>\n\n### Action Icons\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"pencil\" />\n    <span>pencil</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"copy\" />\n    <span>copy</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"download\" />\n    <span>download</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"circle-check\" />\n    <span>circle-check</span>\n  </div>\n</div>\n\n### Documentation Icons\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"sticky-note\" />\n    <span>sticky-note</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"lightbulb\" />\n    <span>lightbulb</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"circle-alert\" />\n    <span>circle-alert (important)</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"triangle-alert\" />\n    <span>triangle-alert (caution)</span>\n  </div>\n</div>\n\n### Theme Icons\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"sun\" />\n    <span>sun</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"moon\" />\n    <span>moon</span>\n  </div>\n</div>\n\n## Using Icons in Text\n\nIcons can be used inline with text:\n\nThis is an information <Icon name=\"info\" /> message.\n\nThis is a warning <Icon name=\"triangle-alert\" color=\"#ffc107\" /> message.\n\nThis is an error <Icon name=\"circle-alert\" color=\"#dc3545\" /> message.\n\nThis is a success <Icon name=\"circle-check\" color=\"#28a745\" /> message.\n\n## Accessibility\n\nFor accessibility purposes, you can provide a label for the icon:\n\n<Icon name=\"info\" label=\"Information\" />\n\nWhen a label is provided, the icon will be announced by screen readers. Without a label, the icon is treated as decorative and will be ignored by screen readers.","src/content/docs/en/v1/guide/04-icons-example.mdx","3a01e9a61e60fc44","en/v1/guide/04-icons-example.mdx","en/v1/guide/05-extended-icons-example",{id:57,data:59,body:62,filePath:63,digest:64,legacyId:65,deferredRender:26},{title:60,description:61,draft:21},"Built-in Icons Example","Examples of using built-in icons","import { Icon } from '@docs/ui';\n\n# Built-in Icon Components\n\nThis guide demonstrates how to use the built-in icon components in your documentation.\n\n## Built-in Icons\n\nThe basic `Icon` component provides a set of built-in icons:\n\n<div style=\"display: flex; align-items: center; gap: 1rem;\">\n  <Icon name=\"info\" />\n  <Icon name=\"warning\" />\n  <Icon name=\"error\" />\n  <Icon name=\"success\" />\n</div>\n\nFor more details on the built-in icons, see the [Icons Example](/en/v1/guide/icons-example) page.\n\n## Using Icons in Text\n\nIcons can be used inline with text:\n\nThis is an information <Icon name=\"info\" /> message.\n\nThis is a warning <Icon name=\"warning\" color=\"#ffc107\" /> message.\n\nThis is an error <Icon name=\"error\" color=\"#dc3545\" /> message.\n\n## Accessibility\n\nFor accessibility purposes, you can provide a label for the icon:\n\n<Icon name=\"info\" label=\"Information\" />\n\nWhen a label is provided, the icon will be announced by screen readers. Without a label, the icon is treated as decorative and will be ignored by screen readers.","src/content/docs/en/v1/guide/05-extended-icons-example.mdx","539d39597b7cc94c","en/v1/guide/05-extended-icons-example.mdx","en/v1/guide/06-tabs-example",{id:66,data:68,body:71,filePath:72,digest:73,legacyId:74,deferredRender:26},{title:69,description:70,draft:21},"Tabs Component Example","Example of using the Tabs component in documentation","import { Tabs, TabItem } from '@docs/ui';\n\n# Tabs Component Example\n\nThis page demonstrates the usage of the Tabs component in documentation.\n\n## Basic Usage\n\n<Tabs>\n  <TabItem label=\"HTML\">\n    ```html\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Hello World</title>\n      </head>\n      <body>\n        <h1>Hello, world!</h1>\n      </body>\n    </html>\n    ```\n  </TabItem>\n  <TabItem label=\"CSS\">\n    ```css\n    body {\n      font-family: system-ui, sans-serif;\n      color: #333;\n      background-color: #f9f9f9;\n    }\n    \n    h1 {\n      color: navy;\n    }\n    ```\n  </TabItem>\n  <TabItem label=\"JavaScript\">\n    ```js\n    document.addEventListener('DOMContentLoaded', () => {\n      console.log('Hello, world!');\n    });\n    ```\n  </TabItem>\n</Tabs>\n\n## Synchronized Tabs\n\nThese tabs are synchronized across the page using the `syncKey` prop.\n\n<Tabs syncKey=\"languages\">\n  <TabItem label=\"JavaScript\">\n    ```js\n    // JavaScript example\n    function greet(name) {\n      return `Hello, ${name}!`;\n    }\n    \n    console.log(greet('World'));\n    ```\n  </TabItem>\n  <TabItem label=\"TypeScript\">\n    ```ts\n    // TypeScript example\n    function greet(name: string): string {\n      return `Hello, ${name}!`;\n    }\n    \n    console.log(greet('World'));\n    ```\n  </TabItem>\n  <TabItem label=\"Python\">\n    ```python\n    # Python example\n    def greet(name):\n        return f\"Hello, {name}!\"\n    \n    print(greet(\"World\"))\n    ```\n  </TabItem>\n</Tabs>\n\nAnother set of tabs with the same `syncKey` will stay in sync with the above tabs:\n\n<Tabs syncKey=\"languages\">\n  <TabItem label=\"JavaScript\">\n    JavaScript is a scripting language that enables dynamic content on web pages.\n  </TabItem>\n  <TabItem label=\"TypeScript\">\n    TypeScript is a strongly typed programming language that builds on JavaScript.\n  </TabItem>\n  <TabItem label=\"Python\">\n    Python is a high-level, general-purpose programming language.\n  </TabItem>\n</Tabs>\n\n## With Icons\n\n<Tabs>\n  <TabItem label=\"Info\" icon='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide-info\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M12 16v-4\"/><path d=\"M12 8h.01\"/></svg>'>\n    This tab has an information icon.\n  </TabItem>\n  <TabItem label=\"Settings\" icon='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide-settings\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>'>\n    This tab has a settings icon.\n  </TabItem>\n  <TabItem label=\"Alert\" icon='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide-alert-triangle\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/><path d=\"M12 9v4\"/><path d=\"M12 17h.01\"/></svg>'>\n    This tab has an alert icon.\n  </TabItem>\n</Tabs>","src/content/docs/en/v1/guide/06-tabs-example.mdx","460ace5ed6062d10","en/v1/guide/06-tabs-example.mdx","en/v2/guide/getting-started",{id:75,data:77,body:83,filePath:84,digest:85,legacyId:86,deferredRender:26},{title:14,description:78,category:16,categoryOrder:17,pubDate:79,updatedDate:80,author:20,draft:21,order:17,next:81},"Learn how to get started with our platform (v2)",["Date","2025-01-01T00:00:00.000Z"],["Date","2025-01-01T00:00:00.000Z"],{text:30,link:82},"/en/v2/guide/installation","# Getting Started with v2\n\nWelcome to version 2 of our documentation! This guide will help you get started with our platform.\n\n## Prerequisites\n\n- Node.js 18 or higher\n- npm, yarn, or pnpm\n- Basic knowledge of JavaScript and TypeScript\n\n## Installation\n\nYou can install our package using npm:\n\n```bash\nnpm install @our-package/core@2\n```\n\nOr using yarn:\n\n```bash\nyarn add @our-package/core@2\n```\n\nOr using pnpm:\n\n```bash\npnpm add @our-package/core@2\n```\n\n## Basic Usage\n\nHere's a simple example of how to use our package with TypeScript:\n\n```typescript\nimport { createApp, type AppOptions } from '@our-package/core';\n\nconst options: AppOptions = {\n  // Configuration options\n  debug: true,\n  mode: 'development',\n  // New in v2\n  plugins: [],\n  theme: 'light'\n};\n\nconst app = createApp(options);\n\napp.start();\n```\n\n## New Features in v2\n\nVersion 2 introduces several new features:\n\n- **TypeScript Support**: Full TypeScript support with type definitions\n- **Plugin System**: Extend functionality with plugins\n- **Theming**: Built-in theme support\n- **Performance Improvements**: 50% faster than v1\n\n## Next Steps\n\nNow that you have the basics set up, you can:\n\n- Learn more about [configuration options](/en/v2/guide/configuration)\n- Explore the [API reference](/en/v2/api/reference)\n- Check out some [examples](/en/v2/examples)\n- Read about [migrating from v1](/en/v2/guide/migration)","src/content/docs/en/v2/guide/getting-started.mdx","22ef955f6f0b7dfe","en/v2/guide/getting-started.mdx","ja/v1/guide/01-getting-started",{id:87,data:89,body:95,filePath:96,digest:97,legacyId:98,deferredRender:26},{title:90,description:91,category:16,categoryOrder:17,pubDate:92,updatedDate:93,author:94,draft:21},"入門","プラットフォームの使い方を学ぶ",["Date","2024-01-01T00:00:00.000Z"],["Date","2025-01-01T00:00:00.000Z"],"ドキュメントチーム","# はじめに\n\nドキュメントへようこそ！このガイドでは、プラットフォームの使い方について説明します。\n\n## 前提条件\n\n- Node.js 18以上\n- npm、yarn、またはpnpm\n- JavaScriptの基本的な知識\n\n## インストール\n\nnpmを使用してパッケージをインストールできます：\n\n```bash\nnpm install @our-package/core\n```\n\nまたは、yarnを使用：\n\n```bash\nyarn add @our-package/core\n```\n\nまたは、pnpmを使用：\n\n```bash\npnpm add @our-package/core\n```\n\n## 基本的な使い方\n\nパッケージの使用例：\n\n```javascript\nimport { createApp } from '@our-package/core';\n\nconst app = createApp({\n  // 設定オプション\n  debug: true,\n  mode: 'development'\n});\n\napp.start();\n```\n\n## 次のステップ\n\n基本的なセットアップが完了したら、以下のことができます：\n\n- [設定オプション](/ja/v1/guide/configuration)について詳しく学ぶ\n- [APIリファレンス](/ja/v1/api/reference)を調べる\n- [サンプル](/ja/v1/examples)を確認する","src/content/docs/ja/v1/guide/01-getting-started.mdx","77af5330ed54130e","ja/v1/guide/01-getting-started.mdx","ja/v1/guide/02-sidebar-auto-generation",{id:99,data:101,body:106,filePath:107,digest:108,legacyId:109,deferredRender:26},{title:102,description:103,category:16,categoryOrder:17,pubDate:104,updatedDate:105,author:94,draft:21},"サイドバーの自動生成","サイドバー自動生成機能の使い方を学ぶ",["Date","2025-05-09T00:00:00.000Z"],["Date","2025-05-09T00:00:00.000Z"],"# サイドバーの自動生成\n\nこのガイドでは、コンテンツ構造に基づいてサイドバーナビゲーションを自動的に作成するサイドバー自動生成機能の使い方を説明します。\n\n## 概要\n\nサイドバー自動生成機能では、以下のことが可能です：\n\n1. コンテンツファイルに基づいてサイドバーナビゲーションを自動生成\n2. フロントマターを使用してカテゴリとその順序を定義\n3. カテゴリ内の項目の順序を制御\n4. 設定ファイルを手動で更新せずにサイドバー表示をカスタマイズ\n\n## 自動生成の有効化\n\nサイドバー自動生成を有効にするには、`docs.config.ts`ファイルで`useAutoSidebar`オプションを`true`に設定します：\n\n```typescript\n// apps/sample-docs/src/config/docs.config.ts\nconst docsConfig = {\n  // ... その他のオプション\n  \n  // サイドバー自動生成を有効化\n  useAutoSidebar: true,\n  \n  // ... その他のオプション\n};\n```\n\n## フロントマターの設定\n\nサイドバーでのコンテンツの表示方法を制御するには、以下のフロントマタープロパティを使用します：\n\n```yaml\n---\ntitle: \"ドキュメントのタイトル\"\ndescription: \"ドキュメントの説明\"\ncategory: \"guide\"  # カテゴリ名（省略可、デフォルトはパスベースのカテゴリ）\ncategoryOrder: 1   # サイドバーでのカテゴリの順序（省略可）\norder: 2           # カテゴリ内での順序（省略可）\n---\n```\n\n### プロパティ\n\n| プロパティ | 型 | 説明 |\n|----------|------|-------------|\n| `title` | string | ドキュメントのタイトル（必須） |\n| `category` | string | サイドバーでのグループ化に使用するカテゴリ名（省略可） |\n| `categoryOrder` | number | サイドバーでのカテゴリの順序（数値が小さいほど先に表示） |\n| `order` | number | カテゴリ内でのドキュメントの順序（数値が小さいほど先に表示） |\n\n## 動作の仕組み\n\nサイドバー生成プロセスは以下の手順で行われます：\n\n1. 現在の言語とバージョンのすべてのコンテンツファイルを収集\n2. カテゴリ（フロントマターまたはファイルパスから）でグループ化\n3. `categoryOrder`に基づいてカテゴリを並べ替え\n4. `order`に基づいて各カテゴリ内のドキュメントを並べ替え\n5. 適切なタイトルとリンクを持つサイドバー構造を生成\n\n## パスベースのカテゴリ\n\nフロントマターで`category`を指定しない場合、システムはパスベースのカテゴリを使用します。例えば：\n\n- `src/content/docs/ja/v1/guide/getting-started.mdx`のファイルは「guide」としてカテゴリ分けされます\n- `src/content/docs/ja/v1/api/reference.mdx`のファイルは「api」としてカテゴリ分けされます\n\n## カテゴリタイトル\n\nカテゴリタイトルは以下の順序で決定されます：\n\n1. `docs.{category}`に一致する翻訳キー（例：`docs.guide` → 「ガイド」）\n2. 翻訳が見つからない場合、カテゴリ名の最初の文字を大文字にします（例：「guide」→ 「Guide」）\n\n## 例\n\n以下はドキュメントのフロントマターの完全な例です：\n\n```yaml\n---\ntitle: \"入門\"\ndescription: \"プラットフォームの使い方を学ぶ\"\ncategory: \"guide\"\ncategoryOrder: 1\norder: 1\npubDate: 2025-01-01\nupdatedDate: 2025-01-01\nauthor: \"ドキュメントチーム\"\nnext:\n  text: \"インストール\"\n  link: \"/ja/v1/guide/installation\"\n---\n```\n\nこれにより、ドキュメントは「ガイド」カテゴリ（サイドバーで最初に表示される）に配置され、そのカテゴリ内の最初の項目になります。","src/content/docs/ja/v1/guide/02-sidebar-auto-generation.mdx","ba5df479e45c4147","ja/v1/guide/02-sidebar-auto-generation.mdx","ja/v1/guide/03-icons-example",{id:110,data:112,body:115,filePath:116,digest:117,legacyId:118,deferredRender:26},{title:113,description:114,draft:21},"アイコンの例","アイコンコンポーネントの使用例","import { Icon } from '@docs/ui';\n\n# アイコンコンポーネントの例\n\nアイコンコンポーネントを使用すると、ドキュメント内にさまざまなアイコンを表示できます。\n\n## 基本的な使い方\n\nアイコンコンポーネントの基本的な使用例：\n\n<Icon name=\"info\" />\n\n## アイコンのサイズ\n\nアイコンにはさまざまな単位でサイズを指定できます：\n\n<div style=\"display: flex; align-items: center; gap: 1rem;\">\n  <Icon name=\"info\" size=\"1em\" />\n  <Icon name=\"info\" size=\"1.5em\" />\n  <Icon name=\"info\" size=\"2em\" />\n  <Icon name=\"info\" size=\"3em\" />\n</div>\n\nピクセル単位でも指定できます：\n\n<div style=\"display: flex; align-items: center; gap: 1rem;\">\n  <Icon name=\"info\" size=\"16px\" />\n  <Icon name=\"info\" size=\"24px\" />\n  <Icon name=\"info\" size=\"32px\" />\n  <Icon name=\"info\" size=\"48px\" />\n</div>\n\n## アイコンの色\n\nアイコンの色をカスタマイズできます：\n\n<div style=\"display: flex; align-items: center; gap: 1rem;\">\n  <Icon name=\"info\" color=\"#007bff\" />\n  <Icon name=\"triangle-alert\" color=\"#ffc107\" />\n  <Icon name=\"circle-alert\" color=\"#dc3545\" />\n  <Icon name=\"circle-check\" color=\"#28a745\" />\n</div>\n\n## 利用可能なアイコン\n\n利用可能なすべてのアイコン：\n\n### 基本アイコン\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"info\" />\n    <span>info（情報）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"settings\" />\n    <span>settings（設定）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"triangle-alert\" />\n    <span>triangle-alert（警告）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"circle-alert\" />\n    <span>circle-alert（エラー）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"code\" />\n    <span>code（コード）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"file-text\" />\n    <span>file-text（文書）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"search\" />\n    <span>search（検索）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"x\" />\n    <span>x（閉じる）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"languages\" />\n    <span>languages（言語）</span>\n  </div>\n</div>\n\n### ナビゲーションアイコン\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"arrow-right\" />\n    <span>arrow-right（右矢印）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"arrow-left\" />\n    <span>arrow-left（左矢印）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"arrow-down\" />\n    <span>arrow-down（下矢印）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"arrow-up\" />\n    <span>arrow-up（上矢印）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"external-link\" />\n    <span>external-link（外部リンク）</span>\n  </div>\n</div>\n\n### アクションアイコン\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"pencil\" />\n    <span>pencil（編集）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"copy\" />\n    <span>copy（コピー）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"download\" />\n    <span>download（ダウンロード）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"circle-check\" />\n    <span>circle-check（成功）</span>\n  </div>\n</div>\n\n### ドキュメントアイコン\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"sticky-note\" />\n    <span>sticky-note（ノート）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"lightbulb\" />\n    <span>lightbulb（ヒント）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"circle-alert\" />\n    <span>circle-alert（重要）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"triangle-alert\" />\n    <span>triangle-alert（注意）</span>\n  </div>\n</div>\n\n### テーマアイコン\n\n<div style=\"display: grid; grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); gap: 1rem;\">\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"sun\" />\n    <span>sun（ライト）</span>\n  </div>\n  <div style=\"display: flex; flex-direction: column; align-items: center;\">\n    <Icon name=\"moon\" />\n    <span>moon（ダーク）</span>\n  </div>\n</div>\n\n## テキスト内でのアイコンの使用\n\nアイコンはテキスト内でインラインで使用できます：\n\nこれは情報 <Icon name=\"info\" /> メッセージです。\n\nこれは警告 <Icon name=\"triangle-alert\" color=\"#ffc107\" /> メッセージです。\n\nこれはエラー <Icon name=\"circle-alert\" color=\"#dc3545\" /> メッセージです。\n\nこれは成功 <Icon name=\"circle-check\" color=\"#28a745\" /> メッセージです。\n\n## アクセシビリティ\n\nアクセシビリティのために、アイコンにラベルを提供できます：\n\n<Icon name=\"info\" label=\"情報\" />\n\nラベルが提供されると、アイコンはスクリーンリーダーによって読み上げられます。ラベルがない場合、アイコンは装飾的なものとして扱われ、スクリーンリーダーによって無視されます。","src/content/docs/ja/v1/guide/03-icons-example.mdx","fc9b4583f8dd1cae","ja/v1/guide/03-icons-example.mdx","ja/v1/guide/04-extended-icons-example",{id:119,data:121,body:124,filePath:125,digest:126,legacyId:127,deferredRender:26},{title:122,description:123,draft:21},"組み込みアイコン例","組み込みアイコンの使用例","import { Icon } from '@docs/ui';\n\n# 組み込みアイコンコンポーネント\n\nこのガイドでは、ドキュメント内で組み込みアイコンコンポーネントを使用する方法を説明します。\n\n## 組み込みアイコン\n\n基本的な`Icon`コンポーネントは、組み込みのアイコンセットを提供します：\n\n<div style=\"display: flex; align-items: center; gap: 1rem;\">\n  <Icon name=\"info\" />\n  <Icon name=\"warning\" />\n  <Icon name=\"error\" />\n  <Icon name=\"success\" />\n</div>\n\n組み込みアイコンの詳細については、[アイコン例](/ja/v1/guide/icons-example)ページをご覧ください。\n\n## テキスト内でのアイコンの使用\n\nアイコンはテキスト内でインラインで使用できます：\n\nこれは情報 <Icon name=\"info\" /> メッセージです。\n\nこれは警告 <Icon name=\"warning\" color=\"#ffc107\" /> メッセージです。\n\nこれはエラー <Icon name=\"error\" color=\"#dc3545\" /> メッセージです。\n\n## アクセシビリティ\n\nアクセシビリティのために、アイコンにラベルを提供できます：\n\n<Icon name=\"info\" label=\"情報\" />\n\nラベルが提供されると、アイコンはスクリーンリーダーによって読み上げられます。ラベルがない場合、アイコンは装飾的なものとして扱われ、スクリーンリーダーによって無視されます。","src/content/docs/ja/v1/guide/04-extended-icons-example.mdx","f28b814663631c98","ja/v1/guide/04-extended-icons-example.mdx","ja/v1/guide/05-tabs-example",{id:128,data:130,body:133,filePath:134,digest:135,legacyId:136,deferredRender:26},{title:131,description:132,draft:21},"タブコンポーネントの例","ドキュメントでのタブコンポーネントの使用例","import { Tabs, TabItem } from '@docs/ui';\n\n# タブコンポーネントの例\n\nこのページでは、ドキュメントでのタブコンポーネントの使用方法を示します。\n\n## 基本的な使い方\n\n<Tabs>\n  <TabItem label=\"HTML\">\n    ```html\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Hello World</title>\n      </head>\n      <body>\n        <h1>Hello, world!</h1>\n      </body>\n    </html>\n    ```\n  </TabItem>\n  <TabItem label=\"CSS\">\n    ```css\n    body {\n      font-family: system-ui, sans-serif;\n      color: #333;\n      background-color: #f9f9f9;\n    }\n    \n    h1 {\n      color: navy;\n    }\n    ```\n  </TabItem>\n  <TabItem label=\"JavaScript\">\n    ```js\n    document.addEventListener('DOMContentLoaded', () => {\n      console.log('Hello, world!');\n    });\n    ```\n  </TabItem>\n</Tabs>\n\n## 同期タブ\n\nこれらのタブは `syncKey` プロパティを使用してページ全体で同期されます。\n\n<Tabs syncKey=\"languages\">\n  <TabItem label=\"JavaScript\">\n    ```js\n    // JavaScript の例\n    function greet(name) {\n      return `こんにちは、${name}さん！`;\n    }\n    \n    console.log(greet('世界'));\n    ```\n  </TabItem>\n  <TabItem label=\"TypeScript\">\n    ```ts\n    // TypeScript の例\n    function greet(name: string): string {\n      return `こんにちは、${name}さん！`;\n    }\n    \n    console.log(greet('世界'));\n    ```\n  </TabItem>\n  <TabItem label=\"Python\">\n    ```python\n    # Python の例\n    def greet(name):\n        return f\"こんにちは、{name}さん！\"\n    \n    print(greet(\"世界\"))\n    ```\n  </TabItem>\n</Tabs>\n\n同じ `syncKey` を持つ別のタブセットは、上記のタブと同期状態を維持します：\n\n<Tabs syncKey=\"languages\">\n  <TabItem label=\"JavaScript\">\n    JavaScriptは、Webページで動的なコンテンツを可能にするスクリプト言語です。\n  </TabItem>\n  <TabItem label=\"TypeScript\">\n    TypeScriptは、JavaScriptをベースにした強力な型付けプログラミング言語です。\n  </TabItem>\n  <TabItem label=\"Python\">\n    Pythonは、高水準の汎用プログラミング言語です。\n  </TabItem>\n</Tabs>\n\n## アイコン付きタブ\n\n<Tabs>\n  <TabItem label=\"情報\" icon='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide-info\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M12 16v-4\"/><path d=\"M12 8h.01\"/></svg>'>\n    このタブには情報アイコンがあります。\n  </TabItem>\n  <TabItem label=\"設定\" icon='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide-settings\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>'>\n    このタブには設定アイコンがあります。\n  </TabItem>\n  <TabItem label=\"警告\" icon='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide-alert-triangle\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/><path d=\"M12 9v4\"/><path d=\"M12 17h.01\"/></svg>'>\n    このタブには警告アイコンがあります。\n  </TabItem>\n</Tabs>","src/content/docs/ja/v1/guide/05-tabs-example.mdx","1a451ec8cd50f267","ja/v1/guide/05-tabs-example.mdx","ja/v2/guide/getting-started",{id:137,data:139,body:146,filePath:147,digest:148,legacyId:149,deferredRender:26},{title:90,description:140,category:16,categoryOrder:17,pubDate:141,updatedDate:142,author:94,draft:21,order:17,next:143},"プラットフォームの使い方を学ぶ（v2）",["Date","2025-01-01T00:00:00.000Z"],["Date","2025-01-01T00:00:00.000Z"],{text:144,link:145},"インストール","/ja/v2/guide/installation","# v2ではじめる\n\nバージョン2のドキュメントへようこそ！このガイドでは、プラットフォームの使い方について説明します。\n\n## 前提条件\n\n- Node.js 18以上\n- npm、yarn、またはpnpm\n- JavaScriptとTypeScriptの基本的な知識\n\n## インストール\n\nnpmを使用してパッケージをインストールできます：\n\n```bash\nnpm install @our-package/core@2\n```\n\nまたは、yarnを使用：\n\n```bash\nyarn add @our-package/core@2\n```\n\nまたは、pnpmを使用：\n\n```bash\npnpm add @our-package/core@2\n```\n\n## 基本的な使い方\n\nTypeScriptを使用したパッケージの使用例：\n\n```typescript\nimport { createApp, type AppOptions } from '@our-package/core';\n\nconst options: AppOptions = {\n  // 設定オプション\n  debug: true,\n  mode: 'development',\n  // v2の新機能\n  plugins: [],\n  theme: 'light'\n};\n\nconst app = createApp(options);\n\napp.start();\n```\n\n## v2の新機能\n\nバージョン2では、いくつかの新機能が導入されています：\n\n- **TypeScriptサポート**: 型定義を含む完全なTypeScriptサポート\n- **プラグインシステム**: プラグインで機能を拡張\n- **テーマ機能**: 組み込みのテーマサポート\n- **パフォーマンスの向上**: v1より50%高速化\n\n## 次のステップ\n\n基本的なセットアップが完了したら、以下のことができます：\n\n- [設定オプション](/ja/v2/guide/configuration)について詳しく学ぶ\n- [APIリファレンス](/ja/v2/api/reference)を調べる\n- [サンプル](/ja/v2/examples)を確認する\n- [v1からの移行](/ja/v2/guide/migration)について読む","src/content/docs/ja/v2/guide/getting-started.mdx","3bd3fdfe2d9e282f","ja/v2/guide/getting-started.mdx"];

export { _astro_dataLayerContent as default };
